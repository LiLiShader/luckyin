{"version":3,"sources":["assets\\scripts\\Game.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Deck from './Deck';\nimport Player from './Player';\nimport Betting from './Betting';\nimport Hand from './Hand';\n// import Card, { Rank, Suit } from './Card';\nimport LanguageManager, { LanguageType } from './LanguageManager';\nimport HttpRequest from '../scriptHttp/HttpRequest';\nimport Card from './Card';\n\nconst { ccclass, property } = cc._decorator;\n\n\n/**\n * Game 类负责控制整个游戏的流程\n */\n@ccclass\nexport default class Game extends cc.Component {\n    private deck: Deck;  // 牌堆\n    private betting: Betting;  // 下注系统\n\n    @property(cc.Prefab)\n    pre_card: cc.Prefab = null!;  // 卡牌预制体\n\n    @property(cc.Prefab)\n    CardBack: cc.Prefab = null!;  // 用于遮罩庄家第二张牌的卡背\n\n    @property(cc.Node)\n    dealerNode: cc.Node = null!;  // 庄家节点\n\n    @property(cc.Node)\n    playerNode: cc.Node = null!;  // 玩家节点\n    @property(cc.Node)\n    playerNodeLeft: cc.Node = null!;  // 玩家分牌左节点\n    @property(cc.Node)\n    playerNodeRight: cc.Node = null!;  // 玩家分牌右节点\n\n    @property(cc.Label)\n    playerScoreLabel: cc.Label = null!;  // 显示玩家分数的 Label\n\n    @property(cc.Label)\n    dealerScoreLabel: cc.Label = null!;  // 显示庄家分数的 Label\n\n\n    @property(cc.Label)\n    playerLeftScoreLabel: cc.Label = null!;  // 显示玩家分牌左分数的 Label\n    @property(cc.Label)\n    playerRightScoreLabel: cc.Label = null!;  // 显示玩家分牌右分数的 Label\n\n\n    dealer: Player;  // 庄家实例\n    player: Player;  // 玩家实例\n    playerLeft: Player;  // 玩家分牌左实例\n    playerRight: Player;  // 玩家分牌右实例\n    playerLeftisOver: boolean=false; //玩家分牌左是否结束\n    playerRightisOver: boolean=false; //玩家分牌右是否结束\n\n    nowWho:string=\"player\"; //当前轮到谁\n    divideCard:any=null; //分牌的牌值\n    divideCardMian:string=\"\"; //分牌的牌面\n\n    @property(cc.Button)\n    betButton: cc.Button = null!;       // 投注按钮\n\n    @property(cc.Button)\n    hitButton: cc.Button = null!;       // 要牌按钮\n\n    @property(cc.Button)\n    standButton: cc.Button = null!;    // 牌按钮\n\n    @property(cc.Button)\n    doubleDownButton: cc.Button = null!;  // 双倍下注按钮\n\n    @property(cc.Button)\n    divideButton: cc.Button = null!; // “分牌” 按钮\n\n    private isDoubleDown: boolean = false;  // 标记是否双倍下注\n\n\n    @property(cc.Label)\n    currentBetLabel: cc.Label = null!;  // 用于显示当前投注额的 Label\n\n    @property(cc.Button)\n    halfBetButton: cc.Button = null!;   // “1/2” 按钮\n\n    @property(cc.Button)\n    doubleBetButton: cc.Button = null!; // “2x” 按钮\n\n    @property(cc.Button)\n    insuranceButton: cc.Button = null!; // “买保险” 按钮\n\n    @property(cc.Button)\n    noInsuranceButton: cc.Button = null!; // “不买保险” 按钮\n\n\n    private currentBet: number = 0.00;  // 当前投注额，初始为 0.00\n    private insuranceBet: number = 0.00; // 保险金额\n    private player21: boolean=false; // 玩家是否开局为21\n    private playerLeft21: boolean=false; // 玩家分牌左是否开局为21\n    private playerRight21: boolean=false; // 玩家分牌右是否开局为21\n    // token =\"tt0476n0x2icejru16p10ufy5695zd5b\"\n    // time_zone =\"Asia/Shanghai\"\n    recordId=-1\n    private saveRecordId(): void {\n        cc.sys.localStorage.setItem('blackjack_recordId', this.recordId.toString());\n    }\n    private loadRecordId(): void {\n        const savedId = cc.sys.localStorage.getItem('blackjack_recordId');\n        if (savedId !== null) {\n            // this.recordId = parseInt(savedId);\n            this.recordId = -1\n        }\n    }\n    bankerCardList:any=[]//bet后返回的数组\n    playerCardList:any=[]//bet后返回的数组\n\n    isActive=false\n\n    token:string=\"err3bi79os38uq4d3cb19wp5fki4kr3e\";\n    \n    //币种\n    currency:number=1;\n    currencyName:string=\"BTC\";\n    /**\n     * 初始化游戏，设置玩家、庄家及牌堆\n     */\n    onLoad() {\n        this.loadRecordId(); // 加载保存的 recordId\n\n        this.deck = new Deck();\n        this.betting = new Betting();\n\n        this.dealer = this.dealerNode.getComponent(Player)!;\n        this.player = this.playerNode.getComponent(Player)!;\n        this.playerLeft = this.playerNodeLeft.getComponent(Player)!;\n        this.playerRight = this.playerNodeRight.getComponent(Player)!;\n\n        \n\n        let currentUrl: string = window.location.href;\n        console.log(\"当前游戏的URL:\", currentUrl);\n        let value = currentUrl.substring(currentUrl.lastIndexOf(\"=\") + 1);\n        switch(value){\n            case \"zh\":\n                LanguageManager.getInstance().setLanguage(LanguageType.CN);\n                break;\n            case \"en\":\n                LanguageManager.getInstance().setLanguage(LanguageType.EN);\n                break;\n            case \"ar\":\n                LanguageManager.getInstance().setLanguage(LanguageType.Ar);\n                break;\n            case \"fr\":\n                LanguageManager.getInstance().setLanguage(LanguageType.FR);\n                break;\n            case \"jp\":\n                LanguageManager.getInstance().setLanguage(LanguageType.JP);\n                break;\n            default:\n                LanguageManager.getInstance().setLanguage(LanguageType.EN);\n                break;\n        }\n\n        this.token = this.getTokenFromUrl(currentUrl);\n        this.currency = this.getCurrencyFromUrl(currentUrl);\n        this.currencyName=this.getCurrencyNameFromUrl(currentUrl);\n        console.log(\"获取到的token:\", this.token);\n        console.log(\"获取到的currency:\", this.currency);\n        console.log(\"获取到的currencyName:\", this.currencyName);\n        HttpRequest.getInstance().token=this.token;\n\n        cc.resources.load(\"icon/\"+this.currencyName,cc.SpriteFrame, (err, spriteFrame) => {\n            cc.find(\"Canvas/UI/BG/NumBG/icon\").getComponent(cc.Sprite).spriteFrame=spriteFrame;\n        });\n        if(this.token==\"\"){\n            cc.find(\"Canvas/NotLoggedIn\").active=true;\n        }\n\n        // this.startNewRound();  // 启动新一轮游戏\n        this.initTextLabel();\n\n        console.log(\"当前的recordId:\", this.recordId);\n        if(this.recordId!=-1){\n            HttpRequest.getInstance().info(this.recordId).then(response => {\n                console.log('获取的响应:', response);\n                this.continueGame(response.data.playerCardList,response.data.bankerCardList);\n            })\n            .catch(error => {\n                console.error('处理请求时出错:', error);\n                return\n            })\n        }\n    }\n    private getTokenFromUrl(url: string): string {\n        try {\n            // 使用正则表达式匹配token=后面的值，直到遇到&或结束\n            const tokenMatch = url.match(/token=([^&]*)/);\n            if (tokenMatch && tokenMatch[1]) {\n                return tokenMatch[1];\n            }\n            return '';\n        } catch (error) {\n            console.error('解析token失败:', error);\n            return '';\n        }\n    }\n    private getCurrencyFromUrl(url: string): number {\n        try {\n            // 使用正则表达式匹配currency=后面的数值\n            const currencyMatch = url.match(/currency=(\\d+)/);\n            if (currencyMatch && currencyMatch[1]) {\n                return parseInt(currencyMatch[1]);\n            }\n            return 1; // 如果没有找到，返回默认值1\n        } catch (error) {\n            console.error('解析currency失败:', error);\n            return 1; // 发生错误时返回默认值1\n        }\n    }\n    private getCurrencyNameFromUrl(url: string): string {\n        try {\n            const currencyNameMatch = url.match(/currencyName=([^&]*)/);\n            if (currencyNameMatch && currencyNameMatch[1]) {\n                const value = currencyNameMatch[1];\n                // 验证货币名称是否合法（例如：只允许大写字母）\n                if (/^[A-Z]+$/.test(value)) {\n                    return value;\n                }\n            }\n            return 'BTC';\n        } catch (error) {\n            console.error('解析 currencyName 失败:', error);\n            return 'BTC';\n        }\n    }\n    //继续游戏\n    async continueGame(playerCardList:any,bankerCardList:any){\n        this.updateButtonStates(false, false, false, false);\n        this.playerCardList=playerCardList;\n        this.bankerCardList=bankerCardList;\n        // 发牌\n        for(let i=0;i<this.playerCardList.length;i++){\n            await this.player.hand.addCard(new Card(1,this.playerCardList[i].num), this.player.isDealer, this.pre_card);\n        }     \n        await this.dealer.hand.addCard(new Card(1,this.bankerCardList[0].num), this.dealer.isDealer, this.pre_card);\n        await this.dealer.hand.addCard(new Card(0,0), this.dealer.isDealer, this.pre_card);\n\n        // 检查庄家第一张牌是否为 A\n        if (this.dealer.hand.cards[0].getValue() === 11&&!this.player.hand.isBlackjack()) {  // 假设 A 的值为 11\n            this.showInsuranceOptions();  // 弹出保险选项\n        } else {\n            this.updateButtonStates(true, true, true, false);  // 启用正常游戏按钮\n        }\n        this.updateScores();  // 每次发牌后更新分数显示\n    }\n    /**\n     * 开始新一轮游戏，发初始的四张牌\n     */\n    startNewRound(): void {\n        this.isActive=false\n        this.playerCardList=[]\n        this.bankerCardList=[]\n        this.player21=false;\n        this.playerLeft21=false;\n        this.playerRight21=false;\n        this.nowWho=\"player\";\n        cc.find(\"Canvas/playerScoreNode\").color=cc.color(47,69,83,255);\n        cc.find(\"Canvas/playerScoreNode/playerScoreLabel\").getComponent(cc.Label).string=\"0\";\n        cc.find(\"Canvas/dealerScoreNode/dealerScoreLabel\").getComponent(cc.Label).string=\"0\";\n        this.playerLeftScoreLabel.node.parent.active=false;\n        this.playerRightScoreLabel.node.parent.active=false;\n        this.playerScoreLabel.node.parent.active=true;\n        // 重置牌堆和手牌\n        this.updateBetDisplay();  // 更新显示\n        this.dealer.resetHand();\n        this.player.resetHand();\n        this.playerLeft.resetHand();\n        this.playerRight.resetHand();\n        this.isDoubleDown = false;  // 重置双倍下注状态\n        // 启用操作按钮，包括加倍按钮\n        this.updateButtonStates(true, true, true, false);\n        // 发牌顺序：玩家两张、庄家一张明牌，再一张暗牌\n        \n        // this.player.hand.addCard(new Card(Suit[\"Clubs\"], Rank[\"Ace\"]),this.player.isDealer,this.pre_card);\n\n        this.dealCard();\n        \n        // this.checkBlackjack();  // 检查是否有初始牌的 Blackjack\n    }\n    // 新增一个类方法\n    private async dealCard(): Promise<void> {\n        this.updateButtonStates(false, false, false, false);\n        let isInsufficient=false;\n        //29\n        await HttpRequest.getInstance().bet(this.betnum,this.currency,29).then(response => {\n            if(response.msg==\"insufficient funds\"){\n                console.log(\"余额不足\")\n                cc.find(\"Canvas/Insufficient Balance\").active=true;\n                isInsufficient = true;\n                return;\n            }\n            console.log('获取的响应:', response);\n            this.playerCardList.push(response.data.playerCardList[0])\n            this.playerCardList.push(response.data.playerCardList[1])\n            // this.bankerCardList.push(response.data.bankerCardList[0])\n            this.bankerCardList=response.data.bankerCardList\n\n            this.recordId=response.data.id\n            this.saveRecordId(); // 保存更新后的 recordId\n        })\n        .catch(error => {\n            console.error('处理请求时出错:', error);\n            return\n        })\n        if(isInsufficient){\n            return\n        }\n        // 发牌顺序：玩家两张、庄家一张明牌，再一张暗牌\n        await this.player.hand.addCard(new Card(1,this.playerCardList[0].num), this.player.isDealer, this.pre_card);\n        await this.player.hand.addCard(new Card(1,this.playerCardList[1].num), this.player.isDealer, this.pre_card);\n        await this.dealer.hand.addCard(new Card(1,this.bankerCardList[0].num), this.dealer.isDealer, this.pre_card);\n        await this.dealer.hand.addCard(new Card(0,0), this.dealer.isDealer, this.pre_card);\n\n        \n        // 遮罩庄家第二张牌\n        // const cardBack = cc.instantiate(this.CardBack);\n        // cardBack.parent = this.dealerNode.children[1];  // 将 CardBack 设为庄家第二张牌的子节点\n        // cardBack.setPosition(0, 0);\n\n        // 检查庄家第一张牌是否为 A\n        if (this.dealer.hand.cards[0].getValue() === 11&&!this.player.hand.isBlackjack()) {  // 假设 A 的值为 11\n            this.showInsuranceOptions();  // 弹出保险选项\n        } else {\n            this.updateButtonStates(true, true, true, false);  // 启用正常游戏按钮\n        }\n        //检查玩家的两张初始手牌Rank数值是否相等\n        let one= cc.find(\"Canvas/Player Node\").children[0].getChildByName(\"Card\").getChildByName(\"Label\").getComponent(cc.Label).string\n        let twe= cc.find(\"Canvas/Player Node\").children[1].getChildByName(\"Card\").getChildByName(\"Label\").getComponent(cc.Label).string\n        if(one===twe){\n            this.divideCard=this.player.hand.cards[0].rank;\n            this.divideCardMian=one;\n            //触发分牌面板\n            this.updateButtonStates(true, true, true, false,true);  // 启用正常游戏按钮\n        }\n        this.updateScores();  // 每次发牌后更新分数显示\n    }\n\n    /**\n     * 显示保险选项并隐藏其他按钮\n     */\n    private showInsuranceOptions(): void {\n        // 显示“买保险”和“不买保险”按钮\n        this.insuranceButton.node.active = true;\n        this.noInsuranceButton.node.active = true;\n\n        // 隐藏“要牌”“停牌”“双倍下注”按钮\n        this.hitButton.node.active = false;\n        this.standButton.node.active = false;\n        this.doubleDownButton.node.active = false;\n    }\n    leftArray:any={}\n    rightArray:any={}\n    async divide():Promise<void>{\n        await HttpRequest.getInstance().divide(this.recordId).then(response => {\n            this.leftArray=response.data[1]\n            this.rightArray=response.data[0]\n            console.log('获取的响应:', response);\n        })\n        .catch(error => {\n            console.error('处理请求时出错:', error);\n            return\n        })\n        console.log(this.leftArray.playerCardList[1].num,this.rightArray.playerCardList[1].num)\n        this.playerLeftScoreLabel.node.parent.active=true;\n        this.playerRightScoreLabel.node.parent.active=true;\n        this.playerScoreLabel.node.parent.active=false;\n        this.playerLeftScoreLabel.node.parent.color=cc.color(47,69,83,255);\n        this.playerRightScoreLabel.node.parent.color=cc.color(47,69,83,255);\n        this.updateButtonStates(false, false, false, false,false);  // 启用正常游戏按钮\n        for (let index = cc.find(\"Canvas/Player Node\").childrenCount-1; index >= 0; index--) {\n            cc.find(\"Canvas/Player Node\").children[index].parent=null;\n        }\n        //TODO 分牌逻辑\n        //将playerLeft和playerRight手牌设置为player手牌的一半\n        await this.playerLeft.hand.addCard(new Card(1, this.divideCard), this.player.isDealer, this.pre_card,\"left\");\n        await this.playerRight.hand.addCard(new Card(1, this.divideCard), this.player.isDealer, this.pre_card,\"right\");\n        await this.playerLeft.hand.addCard(new Card(1,this.leftArray.playerCardList[1].num), this.player.isDealer, this.pre_card,\"left\");\n        await this.playerRight.hand.addCard(new Card(1,this.rightArray.playerCardList[1].num), this.player.isDealer, this.pre_card,\"right\");\n        this.updateButtonStates(true, false, true, false,false);  // 启用正常游戏按钮\n        //清空player手牌\n        this.player.hand.clear();\n\n        this.nowWho=\"playerRight\";\n\n        this.updateScores();  // 每次发牌后更新分数显示\n\n        this.divideColor();\n    }\n    divideColor(){\n        if(this.nowWho==\"playerRight\"){\n            for (let index = cc.find(\"Canvas/Player Node right\").childrenCount-1; index >= 0; index--) {\n                cc.find(\"Canvas/Player Node right\").children[index].getChildByName(\"Signn\").active=true;\n                cc.find(\"Canvas/Player Node right\").children[index].getChildByName(\"Signn\").color=cc.color(0,148,255,255);\n            }\n        }else{\n            for (let index = cc.find(\"Canvas/Player Node right\").childrenCount-1; index >= 0; index--) {\n                cc.find(\"Canvas/Player Node right\").children[index].getChildByName(\"Signn\").active=false;\n            }\n            for (let index = cc.find(\"Canvas/Player Node left\").childrenCount-1; index >= 0; index--) {\n                cc.find(\"Canvas/Player Node left\").children[index].getChildByName(\"Signn\").active=true;\n                cc.find(\"Canvas/Player Node left\").children[index].getChildByName(\"Signn\").color=cc.color(0,148,255,255);\n            }\n        }\n    }\n/**\n * 玩家选择“买保险”\n */\nasync buyInsurance(): Promise<void> {\n    await HttpRequest.getInstance().buyInsurance(this.recordId).then(response => {\n        this.bankerCardList=response.data.bankerCardList\n        // this.dealer.hand.cards[1].suit=response.data.bankerCardList[1].suit\n        // this.dealer.hand.cards[1].rank=response.data.bankerCardList[1].num\n        console.log('获取的响应:', response,this.dealer.hand.cards[1],response.data.bankerCardList[1]);\n    })\n    .catch(error => {\n        console.error('处理请求时出错:', error);\n        return\n    })\n\n    this.insuranceBet = this.currentBet / 2;  // 保险金是当前投注额的一半\n    this.hideInsuranceOptions();  // 隐藏保险选项\n\n    // 检查庄家是否为 Blackjack\n    if (this.dealer.hand.isBlackjack()) {\n        // 显示庄家第二张牌\n        this.dealerNode.children[1].getChildByName(\"CardBack\").active=false;\n        // 庄家是 Blackjack，玩家只输掉保险金\n        this.currentBet -= this.insuranceBet;  // 扣除保险金\n        this.updateBetDisplay();               // 更新投注额显示\n        this.endRound('insurance');            // 特殊结算：只输保险金\n    } else {\n        // 庄家不是 Blackjack，庄家收走保险金，继续正常游戏\n        this.currentBet -= this.insuranceBet;  // 扣除保险金\n        this.updateBetDisplay();               // 更新投注额显示\n        this.updateButtonStates(true, true, true, false);  // 启用正常游戏按钮\n        if(this.player.hand.cards[0].getValue()===this.player.hand.cards[1].getValue()){\n            //触发分牌面板\n            this.updateButtonStates(true, true, true, false,true);  // 启用正常游戏按钮\n        }\n    }\n    this.updateScores();  // 每次发牌后更新分数显示\n}\n\n\n/**\n * 玩家选择“不买保险”\n */\nasync noInsurance(): Promise<void> {\n    await HttpRequest.getInstance().notBuyInsurance(this.recordId).then(response => {\n        this.bankerCardList=response.data.bankerCardList\n\n        // this.bankerCardList.push(response.data.bankerCardList[1])\n        // this.dealer.hand.cards[1].suit=response.data.bankerCardList[1].suit\n        // this.dealer.hand.cards[1].rank=response.data.bankerCardList[1].num\n        console.log('获取的响应:', response);\n    })\n    .catch(error => {\n        console.error('处理请求时出错:', error);\n        return\n    })\n    this.hideInsuranceOptions();  // 隐藏保险选项\n\n    // 检查庄家是否为 Blackjack\n    if (this.dealer.hand.isBlackjack()) {\n        // 显示庄家第二张牌\n        this.dealerNode.children[1].getChildByName(\"CardBack\").active=false;\n        // 庄家是 Blackjack，庄家赢得玩家全部赌注\n        this.endRound('dealer');  // 庄家胜利\n    } else {\n        // 庄家不是 Blackjack，继续正常游戏\n        this.updateButtonStates(true, true, true, false);  // 启用正常游戏按钮\n        if(this.player.hand.cards[0].getValue()===this.player.hand.cards[1].getValue()){\n            //触发分牌面板\n            this.updateButtonStates(true, true, true, false,true);  // 启用正常游戏按钮\n        }\n    }\n    this.updateScores();  // 每次发牌后更新分数显示\n}\n\n/**\n * 隐藏保险选项并恢复正常按钮显示\n */\nprivate hideInsuranceOptions(): void {\n    \n    // 隐藏“买保险”和“不买保险”按钮\n    this.insuranceButton.node.active = false;\n    this.noInsuranceButton.node.active = false;\n\n    {\n        // 恢复“要牌”“停牌”“双倍下注”按钮显示\n        this.hitButton.node.active = true;\n        this.standButton.node.active = true;\n        this.doubleDownButton.node.active = true;\n    }\n}\n\n    /**\n     * 双倍下注 - 玩家只能抽一张牌并立即进入结算\n     */\n    async doubleDown(): Promise<void> {\n            if (this.isDoubleDown) return;  // 确保双倍下注只能执行一次\n    \n            this.betting.doubleBet();  // 翻倍下注\n\n            await HttpRequest.getInstance().redouble(this.recordId).then(response => {\n                this.playerCardList.push(response.data.playerCardList[2])\n                let list=response.data.bankerCardList\n                for(let i=1;i<list.length;i++){\n                    this.bankerCardList.push(list[i])\n                }\n                console.log('获取的响应:', response);\n            })\n            .catch(error => {\n                console.error('处理请求时出错:', error);\n                return\n            })\n            \n            await this.player.hand.addCard(new Card(this.playerCardList[2].suit,this.playerCardList[2].num), this.player.isDealer, this.pre_card); // 玩家抽一张牌\n            this.isDoubleDown = true;  // 设置双倍下注标记\n            this.updateScores();  // 每次发牌后更新分数显示\n            \n            const playerScore = this.player.hand.getScore();\n\n            // 检查玩家是否爆牌\n            if (playerScore > 21) {\n                this.updateButtonStates(false, false, false, true);  // 禁用所有按钮，只启用“投注”按钮\n                this.endRound('dealer');  // 玩家爆牌，庄家胜，直接结束回合\n            } else {\n                // 玩家没有爆牌，无论分数是否为21，都让庄家进入回合\n                this.updateButtonStates(false, false, false, true);  // 禁用所有按钮，只启用“投注”按钮\n                this.dealerTurn(null,true);  // 玩家回合结束，庄家抽牌\n            }\n        }\n    /**\n     * 投注并重新开始游戏\n     */\n    placeBet(): void {\n        for (let index = cc.find(\"Canvas/Dealer Node\").childrenCount-1; index >= 0; index--) {\n            cc.find(\"Canvas/Dealer Node\").children[index].parent=null;\n        }\n        for (let index = cc.find(\"Canvas/Player Node\").childrenCount-1; index >= 0; index--) {\n            cc.find(\"Canvas/Player Node\").children[index].parent=null;\n        }\n        for (let index = cc.find(\"Canvas/Player Node left\").childrenCount-1; index >= 0; index--) {\n            cc.find(\"Canvas/Player Node left\").children[index].parent=null;\n        }\n        for (let index = cc.find(\"Canvas/Player Node right\").childrenCount-1; index >= 0; index--) {\n            cc.find(\"Canvas/Player Node right\").children[index].parent=null;\n        }\n        this.betting.placeBet(this.currentBet);  // 设置默认下注金额（可以根据需要调整或设置为用户输入值）\n        this.startNewRound();       // 启动新一轮游戏\n    }\n\n    /**\n     * 玩家选择要牌\n     * 玩家可以多次要牌，直到爆牌或选择停牌\n     */\n    async playerHit(): Promise<void> {\n        // 禁用加倍按钮，因为玩家已经选择要牌\n        this.doubleDownButton.interactable = false;\n        this.divideButton.interactable = false;\n        await HttpRequest.getInstance().deal(this.recordId).then(response => {\n            this.playerCardList.push(response.data.playerCardList[response.data.playerCardList.length-1])\n            // this.bankerCardList.push(response.data.bankerCardList[response.data.bankerCardList.length-1])\n            this.bankerCardList=response.data.bankerCardList\n            console.log('获取的响应:', response);\n        })\n        .catch(error => {\n            console.error('处理请求时出错:', error);\n            return\n        })\n\n        // 玩家抽一张新牌\n        switch (this.nowWho) {\n            case \"player\":\n                await this.player.hand.addCard(new Card(this.playerCardList[this.playerCardList.length-1].suit,this.playerCardList[this.playerCardList.length-1].num),this.player.isDealer,this.pre_card);\n                break;\n            case \"playerLeft\":\n                await this.playerLeft.hand.addCard(new Card(this.playerCardList[this.playerCardList.length-1].suit,this.playerCardList[this.playerCardList.length-1].num),this.player.isDealer,this.pre_card,\"left\");\n                break;\n            case \"playerRight\":\n                await this.playerRight.hand.addCard(new Card(this.playerCardList[this.playerCardList.length-1].suit,this.playerCardList[this.playerCardList.length-1].num),this.player.isDealer,this.pre_card,\"right\");\n                break;\n            default:\n                break;\n        }\n        this.updateScores();  // 每次发牌后更新分数显示\n\n        console.log(this.nowWho)\n        switch (this.nowWho) {\n            case \"playerLeft\":\n                const playerLeftScore = this.playerLeft.hand.getScore();\n                if (playerLeftScore > 21) {\n                    this.playerLeftisOver=true;\n                    this.endRound('playerLeftLose',true);\n                    //变红\n                    this.dealerTurn(null)\n                }\n                else if (playerLeftScore === 21) {\n                    this.playerLeftisOver=true\n                    this.endRound('playerLeftWin',true);\n                    this.dealerTurn(null);  // 自动进入庄家回合\n                }\n                break;\n            case \"playerRight\":\n                const playerRightScore = this.playerRight.hand.getScore();\n                if (playerRightScore > 21) {\n                    //变红\n                    this.playerRightisOver=true;\n                    this.endRound('playerRightLose',true);\n                    this.nowWho=\"playerLeft\";\n                    this.recordId+=1;\n                    this.saveRecordId();\n                    this.divideColor();\n                }\n                else if (playerRightScore === 21) {\n                    this.playerRightisOver=true;\n                    this.endRound('playerRightWin',true);\n                    this.nowWho=\"playerLeft\";  \n                    this.recordId+=1;\n                    this.saveRecordId();\n                    this.divideColor();\n                }\n                break;\n            default:\n                const playerScore = this.player.hand.getScore();\n\n                // 如果玩家爆牌（分数大于21），直接结束回合\n                if (playerScore > 21) {\n                    this.updateButtonStates(false, false, false, true);  // 禁用所有按钮，只启用“投注”按钮\n                    this.endRound('dealer');  // 玩家输\n                }\n                // 如果玩家分数等于 21，进入庄家回合\n                else if (playerScore === 21) {\n                    this.updateButtonStates(false, false, false, true);  // 禁用所有按钮，只启用“投注”按钮\n                    console.log(\"21\")\n                    this.dealerTurn(null);  // 自动进入庄家回合\n                }\n                break;\n        }\n        \n    }\n    /**\n     * 更新操作按钮的启用状态\n     * @param enableHit {boolean} 是否启用“要牌”按钮\n     * @param enableDouble {boolean} 是否启用“双倍下注”按钮\n     * @param enableStand {boolean} 是否启用“停牌”按钮\n     * @param enableBet {boolean} 是否启用“投注”按钮\n     */\n    private updateButtonStates(enableHit: boolean, enableDouble: boolean, enableStand: boolean, enableBet: boolean,enableDivide:boolean=false): void {\n        this.hitButton.interactable = enableHit;\n        this.doubleDownButton.interactable = enableDouble;\n        this.standButton.interactable = enableStand;\n        this.betButton.interactable = enableBet;\n        this.divideButton.interactable = enableDivide;\n    }\n    /**\n     * 庄家的要牌逻辑\n     * 庄家根据 Blackjack 规则持续要牌，直到满足停牌条件\n     */\n    iserror=false\n    async dealerTurn(any:any,isDouble:boolean=false): Promise<void> {\n        let ifError=false;\n        if(this.nowWho==\"player\"||this.nowWho==\"playerLeft\"){\n            if(!isDouble){\n                await HttpRequest.getInstance().stop(this.recordId).then(response => {\n                    console.log('获取的响应:', response);\n                    \n                    if(cc.find(\"Canvas/playerrightScoreNode\").active&&response.msg===\"order status error\"){\n                        console.log(\"order status error\")\n                        this.recordId--\n                        this.dealerTurn(null)\n                    }else{\n                        // let list=response.data.bankerCardList\n                        // for(let i=1;i<list.length;i++){\n                        //     this.bankerCardList.push(list[i])\n                        // }\n        this.bankerCardList=response.data.bankerCardList\n\n                        this.recordId=-1;\n                        this.saveRecordId();\n                    }\n                })\n                .catch(error => {\n                    console.error('处理请求时出错:', error);\n                    ifError=true;\n                    return\n                })\n            }\n        }\n        if(ifError){\n            this.updateButtonStates(false, false, false, true)\n            return\n        }\n        this.luoji()\n    }\n    async luoji(){\n        if(this.nowWho==\"player\"||this.nowWho==\"playerLeft\"){\n            // 庄家在点数未达标时自动要牌\n            this.updateButtonStates(false, false, false, false);  // 禁用所有操作按钮\n            // 显示庄家第二张牌\n            // await this.flipDealerCard();\n    \n            this.updateScores(true);  // 每次发牌后更新分数显示\n            // while (this.dealer.shouldHit()) {\n            //     await this.dealer.hand.addCard(new Card(1,1),this.dealer.isDealer,this.pre_card);\n            //     this.updateScores(true);  // 每次抽牌后更新分数显示\n            // }\n            if(cc.find(\"Canvas/Dealer Node\").children[1]){\n                cc.find(\"Canvas/Dealer Node\").children[1].active=false\n                cc.find(\"Canvas/Dealer Node\").children[1].parent=null\n            } \n            \n            console.log(this.bankerCardList)\n            for (let index = 1; index < this.bankerCardList.length; index++) {\n\n                await this.dealer.hand.addCard(new Card(this.bankerCardList[index].suit,this.bankerCardList[index].num),this.dealer.isDealer,this.pre_card);  \n                this.updateScores(true);  // 每次发牌后更新分数显示\n            }   \n    \n            // 判断庄家和玩家的最终分数来决定游戏结果\n            const dealerScore = this.dealer.hand.getScore();\n    \n            switch (this.nowWho) {\n                case \"playerLeft\":\n                    \n                    const playerLeftScore = this.playerLeft.hand.getScore();\n                    if (!this.playerLeftisOver) {\n                        if (dealerScore > 21) {\n                            this.endRound('playerLeftWin');\n                        } else if (dealerScore > playerLeftScore) {\n                            this.endRound('playerLeftLose');\n                        } else if (dealerScore < playerLeftScore) {\n                            this.endRound('playerLeftWin');\n                        } else {\n                            this.endRound('playerLeftPush');\n                        }\n                    }\n    \n                \n                    const playerRightScore = this.playerRight.hand.getScore();\n                    if (!this.playerRightisOver) {\n                        if (dealerScore > 21) {\n                            this.endRound('playerRightWin');\n                        } else if (dealerScore > playerRightScore) {\n                            this.endRound('playerRightLose');\n                        } else if (dealerScore < playerRightScore) {\n                            this.endRound('playerRightWin');\n                        } else {\n                            this.endRound('playerRightPush');\n                        }\n                    }\n                    if(this.playerRightisOver&&this.playerLeftisOver){\n                        this.updateButtonStates(false, false, false, true)\n                    }\n                    break;\n    \n                default:\n                    const playerScore = this.player.hand.getScore();\n    \n                    if (dealerScore > 21) {\n                        // 如果庄家爆牌，玩家胜\n                        this.endRound('player');\n                    } else if (dealerScore > playerScore) {\n                        // 庄家分数更高，庄家胜\n                        this.endRound('dealer');\n                    } else if (dealerScore < playerScore) {\n                        // 玩家分数更高，玩家胜\n                        this.endRound('player');\n                    } else {\n                        // 平局\n                        this.endRound('push');\n                    }\n                    break;\n            }\n            }else{\n                this.nowWho=\"playerLeft\";\n                this.recordId+=1;\n                this.saveRecordId();\n                this.divideColor();\n            }\n    }\n    private async flipDealerCard(): Promise<void> {\n        return new Promise((resolve) => {\n            cc.tween(this.dealerNode.children[1])\n                .to(0.2, { scaleX: 0 })\n                .call(() => {\n                    this.dealerNode.children[1].getChildByName(\"CardBack\").active = false;\n                })\n                .to(0.2, { scaleX: 1 })\n                .call(() => {\n                    resolve(); // 动画完成后解析 Promise\n                })\n                .start();\n        });\n    }\n    /**\n     * 检查是否有 Blackjack\n     * 在初始发牌后调用，如果玩家或庄家有 Blackjack 则直接结束游戏\n     */\n    checkBlackjack(): void {\n        // 判断玩家和庄家是否同时拥有 Blackjack\n        if (this.player.hand.isBlackjack() && this.dealer.hand.isBlackjack()) {\n            this.endRound('push');  // 平局状态\n        } else if (this.player.hand.isBlackjack()) {\n            this.betting.winBlackjack();  // 玩家 Blackjack 胜利\n            this.endRound('player');  // 以玩家胜利结束\n        } else if (this.dealer.hand.isBlackjack()) {\n            this.betting.lose();  // 玩家失败，庄家胜利\n            this.endRound('dealer');\n        }\n    }\n    /**\n     * 结束当前回合并计算结果\n     * @param result {'player' | 'dealer' | 'push' | 'insurance'} 根据游戏结果进行相应的结算\n     */\n    endRound(result: 'player' | 'dealer' | 'push' | 'insurance'|'playerLeftWin'|'playerRightWin'|'playerLeftLose'|'playerRightLose'|'playerLeftPush'|'playerRightPush',bujieshu:boolean=false): void {\n        if (result === 'player') {\n            this.betting.win();  // 玩家赢得正常对局\n        } else if (result === 'dealer') {\n            this.betting.lose();  // 玩家输掉对局，庄家赢得全部赌注\n        } else if (result === 'push') {\n            this.betting.push();  // 平局，返还赌注\n        } else if (result === 'insurance') {\n            // 玩家选择了“买保险”且庄家 Blackjack，玩家只输保险金\n            // 不再进一步扣除 `currentBet`\n        }\n\n        if (result === 'playerLeftWin') {\n            this.betting.winLeft();\n        }else if (result === 'playerLeftLose') {\n            this.betting.loseLeft();\n        }else if (result === 'playerLeftPush') {\n            this.betting.pushLeft();\n        }\n        \n        if (result === 'playerRightWin') {\n            this.betting.winRight();\n        }else if (result === 'playerRightLose') {\n            this.betting.loseRight();\n        }else if (result === 'playerRightPush') {\n            this.betting.pushRight();\n        }\n        \n        // 禁用所有操作按钮，准备下一轮\n\n        if(!bujieshu) {\n            this.updateButtonStates(false, false, false, true);\n            this.recordId=-1;\n            this.saveRecordId();\n        }\n    }\n\n\n    /**\n     * 更新玩家和庄家的分数显示\n     * 在每次抽牌后调用，确保分数显示同步更新\n     * @param showFullDealerScore {boolean} 是否显示庄家的完整分数\n     */\n    async updateScores(showFullDealerScore: boolean = false) {\n        // 玩家分数显示：如果是 Blackjack，直接显示 21\n        const playerScore = this.player.hand.isBlackjack() ? 21 : this.player.hand.getPossibleScores();\n\n        this.playerScoreLabel.string = `${Array.isArray(playerScore) ? playerScore.join(' , ') : playerScore}`;\n\n        // if(!this.player21 && this.player.hand.isBlackjack()){\n        //     this.player21=true\n        //     this.dealerTurn(null,true),\n\n        //     this.luoji()\n        // }\n\n        // if(!this.player21 && this.player.hand.getPossibleScores()[0]==21){\n        //     this.dealerTurn(null,true)\n        //     this.player21=true\n        //     return\n        // }\n        if(this.player.hand.isBlackjack()||this.player.hand.getPossibleScores()[0]==21||this.player.hand.getPossibleScores()[1]==21){\n            if(this.nowWho==\"player\"||this.nowWho==\"playerLeft\"){\n                this.updateButtonStates(false, false, false, false);  // 禁用所有操作按钮\n                cc.find(\"Canvas/Dealer Node\").children[1].active=false\n                cc.find(\"Canvas/Dealer Node\").children[1].parent=null\n                \n                console.log(this.bankerCardList)\n                for (let index = 1; index < this.bankerCardList.length; index++) {\n\n                    await this.dealer.hand.addCard(new Card(this.bankerCardList[index].suit,this.bankerCardList[index].num),this.dealer.isDealer,this.pre_card);  \n                    // this.updateScores(true);  // 每次发牌后更新分数显示\n                } \n                this.scheduleOnce(()=>{\n                    this.dealerScoreLabel.string=this.dealer.hand.getScore()+\"\"\n                })\n                const dealerScore = this.dealer.hand.getScore();\n                switch (this.nowWho) {\n                    case \"playerLeft\":\n                        \n                        const playerLeftScore = this.playerLeft.hand.getScore();\n                        if (!this.playerLeftisOver) {\n                            if (dealerScore > 21) {\n                                this.endRound('playerLeftWin');\n                            } else if (dealerScore > playerLeftScore) {\n                                this.endRound('playerLeftLose');\n                            } else if (dealerScore < playerLeftScore) {\n                                this.endRound('playerLeftWin');\n                            } else {\n                                this.endRound('playerLeftPush');\n                            }\n                        }\n        \n                    \n                        const playerRightScore = this.playerRight.hand.getScore();\n                        if (!this.playerRightisOver) {\n                            if (dealerScore > 21) {\n                                this.endRound('playerRightWin');\n                            } else if (dealerScore > playerRightScore) {\n                                this.endRound('playerRightLose');\n                            } else if (dealerScore < playerRightScore) {\n                                this.endRound('playerRightWin');\n                            } else {\n                                this.endRound('playerRightPush');\n                            }\n                        }\n                        if(this.playerRightisOver&&this.playerLeftisOver){\n                            this.updateButtonStates(false, false, false, true)\n                        }\n                        break;\n        \n                    default:\n                        const playerScore = this.player.hand.getScore();\n        \n                        if (dealerScore > 21) {\n                            // 如果庄家爆牌，玩家胜\n                            this.endRound('player');\n                        } else if (dealerScore > playerScore) {\n                            // 庄家分数更高，庄家胜\n                            this.endRound('dealer');\n                        } else if (dealerScore < playerScore) {\n                            // 玩家分数更高，玩家胜\n                            this.endRound('player');\n                        } else {\n                            // 平局\n                            this.endRound('push');\n                        }\n                        break;\n                }\n            }else{\n                this.nowWho=\"playerLeft\";\n                this.recordId+=1;\n                this.saveRecordId();\n                this.divideColor();\n            }\n        }\n\n        // 玩家分牌左分数显示：如果是 Blackjack，直接显示 21\n        const playerLeftScore = this.playerLeft.hand.isBlackjack() ? 21 : this.playerLeft.hand.getPossibleScores();\n        this.playerLeftScoreLabel.string = `${Array.isArray(playerLeftScore) ? playerLeftScore.join(' , ') : playerLeftScore}`;\n        if(!this.playerLeft21 && this.playerLeft.hand.isBlackjack()){this.nowWho=\"playerLeft\",this.recordId+=1,this.saveRecordId(),this.playerLeft21=true}//\n        // 玩家分牌右分数显示：如果是 Blackjack，直接显示 21\n        const playerRightScore = this.playerRight.hand.isBlackjack() ? 21 : this.playerRight.hand.getPossibleScores();\n        this.playerRightScoreLabel.string = `${Array.isArray(playerRightScore) ? playerRightScore.join(' , ') : playerRightScore}`;\n        if(!this.playerRight21 && this.playerRight.hand.isBlackjack()){this.dealerTurn(null),this.playerRight21=true}//\n        // 庄家分数显示：如果是 Blackjack，直接显示 21\n        const dealerScore = (this.dealer.hand.isBlackjack()&&!this.insuranceButton.node.active)? 21 : (showFullDealerScore ? this.dealer.hand.getPossibleScores() : [this.dealer.hand.cards[0].getValue()]);\n        this.dealerScoreLabel.string = `${Array.isArray(dealerScore) ? dealerScore.join(' , ') : dealerScore}`;\n\n        this.divideColor();\n    }\n    /**\n     * 更新投注额显示\n     */\n    private updateBetDisplay(): void {\n        // 将投注额格式化为两位小数显示\n        this.currentBetLabel.string = `${this.currentBet.toFixed(2)}`;\n        this.betting.placeBet(this.currentBet);  // 设置默认下注金额（可以根据需要调整或设置为用户输入值）\n    }\n\n    /**\n     * 减半投注额\n     */\n    halfBet(): void {\n        // 只有当投注额大于 0 时才减半\n        if (this.currentBet > 0) {\n            if(this.currentBet == 0.01) this.currentBet=0.00;\n            else this.currentBet /= 2;\n            this.updateBetDisplay();  // 更新显示\n        }\n    }\n    /**\n     * 翻倍投注额\n     */\n    doubleBet(): void {\n        this.currentBet *= 2;\n        if (this.currentBet == 0) this.currentBet=0.01;\n        this.updateBetDisplay();  // 更新显示\n    }\n    // 切换语言方法\n    switchLanguage() {\n        const currentLang = LanguageManager.getInstance().getCurrentLanguage();\n        const nextLang = LanguageManager.getInstance().getNextLanguage(currentLang);\n        LanguageManager.getInstance().setLanguage(nextLang);\n    }\n\n    betnum:number=0;//下注金额\n    @property(cc.Label)\n    TEXT_LABEL:cc.Label=null;\n    private initTextLabel() {\n        const editBox = this.TEXT_LABEL.node.parent.getComponent(cc.EditBox);\n        if (editBox) {\n            // 添加 TEXT_CHANGED 事件监听\n            editBox.node.on('text-changed', (editbox: cc.EditBox) => {\n                const text = editbox.string;\n                // 允许数字和小数点，但要处理特殊情况\n                let numericValue = text.replace(/[^0-9.]/g, '');\n                \n                // 处理多个小数点的情况，只保留第一个小数点\n                const dotIndex = numericValue.indexOf('.');\n                if (dotIndex !== -1) {\n                    const beforeDot = numericValue.substring(0, dotIndex + 1);\n                    const afterDot = numericValue.substring(dotIndex + 1).replace(/\\./g, '');\n                    numericValue = beforeDot + afterDot;\n                }\n                \n                // 如果第一个字符是小数点，在前面添加0\n                if (numericValue.startsWith('.')) {\n                    numericValue = '0' + numericValue;\n                }\n                \n                // 转换为数字进行范围检查\n                let numberValue = Number(numericValue);\n                \n                // 限制最小值和最大值\n                if (numberValue < 0.1) {\n                    numberValue = 0.1;\n                    numericValue = '0.1';\n                } else if (numberValue > 100) {\n                    numberValue = 100;\n                    numericValue = '100';\n                }\n                \n                if (text !== numericValue) {\n                    editbox.string = numericValue;\n                }\n                this.betnum = numberValue;\n                \n                // 可以添加提示信息（可选）\n                if (numberValue < 0.1 || numberValue > 100) {\n                    // this.showLimitTip();\n                }\n            });\n            \n            // 设置初始值\n            editBox.string = '0.1';\n            this.betnum = 0.1;\n        }\n    }\n    ChengOrChu(event: cc.Event.EventTouch, string: string) {\n        let newValue: number;\n        \n        if (string == \"1\") {\n            // 乘2\n            this.betnum = Number(this.TEXT_LABEL.string);\n            newValue = this.betnum * 2;\n        } else {\n            // 除2\n            this.betnum = Number(this.TEXT_LABEL.string);\n            newValue = Number((this.betnum / 2).toFixed(2)); // 保留两位小数\n        }\n    \n        // 限制最大最小值\n        if (newValue < 0.1) {\n            newValue = 0.1;\n        } else if (newValue > 100) {\n            newValue = 100;\n        }\n    \n        // 更新值\n        this.betnum = newValue;\n        this.TEXT_LABEL.string = newValue.toString();\n    \n        // 可选：当达到限制时显示提示\n        if ((string == \"1\" && this.betnum >= 100) || (string == \"2\" && this.betnum <= 0.1)) {\n            // this.showLimitTip();\n        }\n    }\n    newgame(){\n        cc.director.loadScene(\"mainSceneHttp\");\n    }\n    openOrclose(any,str){\n        if(str==\"1\"){\n            cc.find(\"Canvas/Guize\").active=true\n        }else{\n            cc.find(\"Canvas/Guize\").active=false\n        }\n    }\n}\n"]}