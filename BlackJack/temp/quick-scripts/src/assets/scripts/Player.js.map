{"version":3,"sources":["assets\\scripts\\Player.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAA0B;AACpB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAE5C;;;GAGG;AAEH;IAAoC,0BAAY;IAAhD;QAAA,qEAgCC;QA/BU,UAAI,GAAS,IAAI,cAAI,EAAE,CAAC,CAAE,OAAO;QAGxC,cAAQ,GAAY,KAAK,CAAC,CAAE,QAAQ;;IA4BxC,CAAC;IA1BG;;OAEG;IACH,0BAAS,GAAT;QACI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,0BAAS,GAAT;QACI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnC,OAAO,KAAK,GAAG,EAAE,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;SAC3D;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAED;;;OAGG;IACK,0BAAS,GAAjB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,EAAE,EAAZ,CAAY,CAAC,CAAC;IACrF,CAAC;IA3BD;QADC,QAAQ;4CACiB;IAJT,MAAM;QAD1B,OAAO;OACa,MAAM,CAgC1B;IAAD,aAAC;CAhCD,AAgCC,CAhCmC,EAAE,CAAC,SAAS,GAgC/C;kBAhCoB,MAAM","file":"","sourceRoot":"/","sourcesContent":["import Hand from './Hand';\nconst { ccclass, property } = cc._decorator;\n\n/**\n * Player 类表示游戏中的玩家\n * 可以作为庄家或闲家使用\n */\n@ccclass\nexport default class Player extends cc.Component {\n    public hand: Hand = new Hand();  // 当前手牌\n\n    @property\n    isDealer: boolean = false;  // 是否为庄家\n\n    /**\n     * 重置玩家的手牌\n     */\n    resetHand(): void {\n        this.hand.clear();\n    }\n\n    /**\n     * 庄家判断是否需要继续要牌\n     * 庄家需至少到17点，软17（含A）需继续拿牌\n     */\n    shouldHit(): boolean {\n        if (this.isDealer) {\n            const score = this.hand.getScore();\n            return score < 17 || (score === 17 && this.hasSoft17());\n        }\n        return false;\n    }\n\n    /**\n     * 判断是否是软17\n     * @returns {boolean} 是否为软17（含A）\n     */\n    private hasSoft17(): boolean {\n        return this.hand.getScore() === 17 && this.hand.cards.some(card => card.isAce());\n    }\n}\n"]}